name: CI
on: [pull_request, push]

jobs:
  ci-test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.4.2"]
        os: [ubuntu-20.04, macos-latest, windows-latest]
        project:
          [
            bia-ingest,
            bia-shared-datamodels,
            core,
          ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: View poetry --help
        run: poetry --help
      - name: Poetry env setup
        run: poetry env use python
      - name: Poetry install
        run: poetry install
      - name: Check to see if poetry can build
        run: poetry build
      - name: Run pytest
        run: poetry run pytest
  ci-make:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.4.2"]
        # NOTE - WE DO NOT TEST ON MAC/WINDOWS!!
        # The current tests dockerize the test runner, so there is not much point on testing across platforms
        # TODO: we want to change this to more closely follow how users actually run tests (setting up API first, then running tests)
        # Ticket: https://app.clickup.com/t/8697kxtgx
        os: [ubuntu-20.04] 
        project:
          [
            bia-export,
          ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # Set up Docker Buildx for building and pushing Docker images
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: run makefile
        run: make ${{matrix.project}}.test

